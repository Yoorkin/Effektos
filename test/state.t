
  $ effektos --show-input --debug-tokens --debug-lambda --debug-uniquify --debug-cps --debug-simplify --debug-closure-conversion --debug-flat --debug-js $TESTDIR/state.tos
  =========== Source ================
  let print = fun x -> (extern "console.log" x) in n
  effect Put, Get, Return in n
  let runState = n
    fun program -> fun initial -> n
      let s = n
        handle program () with n
        | Put (x,k) -> fun ignored -> (k ()) x n
        | Get (ignored,k) -> fun y -> (k y) y n
        | Return (x,k) -> fun ignored -> x n
      in s initial n
  in n
  runState (fun ignored -> n
    let x = Get () in n
    print x; n
    Put (x + 10); n
    let x2 = Get () in n
    Return x2;  n
    print 114514 n
  ) 5
  
  =========== Tokens ================
  [ (Symbol "let",1:1,3)
  , (Identifier "print",1:5,5)
  , (Symbol "=",1:11,1)
  , (Symbol "fun",1:13,3)
  , (Identifier "x",1:17,1)
  , (Symbol "->",1:19,2)
  , (Symbol "(",1:22,1)
  , (Symbol "extern",1:23,6)
  , (String "console.log",1:30,13)
  , (Identifier "x",1:44,1)
  , (Symbol ")",1:45,1)
  , (Symbol "in",1:47,2)
  , (Identifier "n",1:50,1)
  , (Symbol "effect",2:1,6)
  , (Identifier "Put",2:8,3)
  , (Symbol ",",2:11,1)
  , (Identifier "Get",2:13,3)
  , (Symbol ",",2:16,1)
  , (Identifier "Return",2:18,6)
  , (Symbol "in",2:25,2)
  , (Identifier "n",2:28,1)
  , (Symbol "let",3:1,3)
  , (Identifier "runState",3:5,8)
  , (Symbol "=",3:14,1)
  , (Identifier "n",3:16,1)
  , (Symbol "fun",4:3,3)
  , (Identifier "program",4:7,7)
  , (Symbol "->",4:15,2)
  , (Symbol "fun",4:18,3)
  , (Identifier "initial",4:22,7)
  , (Symbol "->",4:30,2)
  , (Identifier "n",4:33,1)
  , (Symbol "let",5:5,3)
  , (Identifier "s",5:9,1)
  , (Symbol "=",5:11,1)
  , (Identifier "n",5:13,1)
  , (Symbol "handle",6:7,6)
  , (Identifier "program",6:14,7)
  , (Symbol "(",6:22,1)
  , (Symbol ")",6:23,1)
  , (Symbol "with",6:25,4)
  , (Identifier "n",6:30,1)
  , (Symbol "|",7:7,1)
  , (Identifier "Put",7:9,3)
  , (Symbol "(",7:13,1)
  , (Identifier "x",7:14,1)
  , (Symbol ",",7:15,1)
  , (Identifier "k",7:16,1)
  , (Symbol ")",7:17,1)
  , (Symbol "->",7:19,2)
  , (Symbol "fun",7:22,3)
  , (Identifier "ignored",7:26,7)
  , (Symbol "->",7:34,2)
  , (Symbol "(",7:37,1)
  , (Identifier "k",7:38,1)
  , (Symbol "(",7:40,1)
  , (Symbol ")",7:41,1)
  , (Symbol ")",7:42,1)
  , (Identifier "x",7:44,1)
  , (Identifier "n",7:46,1)
  , (Symbol "|",8:7,1)
  , (Identifier "Get",8:9,3)
  , (Symbol "(",8:13,1)
  , (Identifier "ignored",8:14,7)
  , (Symbol ",",8:21,1)
  , (Identifier "k",8:22,1)
  , (Symbol ")",8:23,1)
  , (Symbol "->",8:25,2)
  , (Symbol "fun",8:28,3)
  , (Identifier "y",8:32,1)
  , (Symbol "->",8:34,2)
  , (Symbol "(",8:37,1)
  , (Identifier "k",8:38,1)
  , (Identifier "y",8:40,1)
  , (Symbol ")",8:41,1)
  , (Identifier "y",8:43,1)
  , (Identifier "n",8:45,1)
  , (Symbol "|",9:7,1)
  , (Identifier "Return",9:9,6)
  , (Symbol "(",9:16,1)
  , (Identifier "x",9:17,1)
  , (Symbol ",",9:18,1)
  , (Identifier "k",9:19,1)
  , (Symbol ")",9:20,1)
  , (Symbol "->",9:22,2)
  , (Symbol "fun",9:25,3)
  , (Identifier "ignored",9:29,7)
  , (Symbol "->",9:37,2)
  , (Identifier "x",9:40,1)
  , (Identifier "n",9:42,1)
  , (Symbol "in",10:5,2)
  , (Identifier "s",10:8,1)
  , (Identifier "initial",10:10,7)
  , (Identifier "n",10:18,1)
  , (Symbol "in",11:1,2)
  , (Identifier "n",11:4,1)
  , (Identifier "runState",12:1,8)
  , (Symbol "(",12:10,1)
  , (Symbol "fun",12:11,3)
  , (Identifier "ignored",12:15,7)
  , (Symbol "->",12:23,2)
  , (Identifier "n",12:26,1)
  , (Symbol "let",13:3,3)
  , (Identifier "x",13:7,1)
  , (Symbol "=",13:9,1)
  , (Identifier "Get",13:11,3)
  , (Symbol "(",13:15,1)
  , (Symbol ")",13:16,1)
  , (Symbol "in",13:18,2)
  , (Identifier "n",13:21,1)
  , (Identifier "print",14:3,5)
  , (Identifier "x",14:9,1)
  , (Symbol ";",14:10,1)
  , (Identifier "n",14:12,1)
  , (Identifier "Put",15:3,3)
  , (Symbol "(",15:7,1)
  , (Identifier "x",15:8,1)
  , (Symbol "+",15:10,1)
  , (Number 10,15:12,2)
  , (Symbol ")",15:14,1)
  , (Symbol ";",15:15,1)
  , (Identifier "n",15:17,1)
  , (Symbol "let",16:3,3)
  , (Identifier "x2",16:7,2)
  , (Symbol "=",16:10,1)
  , (Identifier "Get",16:12,3)
  , (Symbol "(",16:16,1)
  , (Symbol ")",16:17,1)
  , (Symbol "in",16:19,2)
  , (Identifier "n",16:22,1)
  , (Identifier "Return",17:3,6)
  , (Identifier "x2",17:10,2)
  , (Symbol ";",17:12,1)
  , (Identifier "n",17:15,1)
  , (Identifier "print",18:3,5)
  , (Number 114514,18:9,6)
  , (Identifier "n",18:16,1)
  , (Symbol ")",19:1,1)
  , (Number 5,19:3,1)
  , (Eof,0:0,0)
  ]
  =========== Lambda ================
  effektos: Parse error: [(Symbol "effect",2:1,6),(Identifier "Put",2:8,3),(Symbol ",",2:11,1),(Identifier "Get",2:13,3),(Symbol ",",2:16,1),(Identifier "Return",2:18,6),(Symbol "in",2:25,2),(Identifier "n",2:28,1),(Symbol "let",3:1,3),(Identifier "runState",3:5,8)]
  CallStack (from HasCallStack):
    error, called at src/ParseUtils.hs:12:21 in effektos-0.1.0.0-GiDKboXjlGJKzd0BjwkMek:ParseUtils
  [1]
