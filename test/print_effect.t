
  $ effektos --show-input --debug-tokens --debug-lambda --debug-uniquify --debug-cps --debug-simplify --debug-closure-conversion --debug-flat --debug-js $TESTDIR/print_effect.tos
  =========== Source ================
  
  let rec consoleHandler = fun e -> 
   handle e with 
   | Print(x,k) -> k () 
   | Input(x,k) -> let plus1 = fun x -> x + 1 in k (plus1(plus1(5))) 
  in 
  let rec loop = fun n -> if n > 0 then (Print n; loop (n-1)) else () in 
  consoleHandler (loop 5)
  
  =========== Tokens ================
  [ (Symbol "let",2:1,3)
  , (Symbol "rec",2:5,3)
  , (Identifier "consoleHandler",2:9,14)
  , (Symbol "=",2:24,1)
  , (Symbol "fun",2:26,3)
  , (Identifier "e",2:30,1)
  , (Symbol "->",2:32,2)
  , (Symbol "handle",3:2,6)
  , (Identifier "e",3:9,1)
  , (Symbol "with",3:11,4)
  , (Symbol "|",4:2,1)
  , (Identifier "Print",4:4,5)
  , (Symbol "(",4:9,1)
  , (Identifier "x",4:10,1)
  , (Symbol ",",4:11,1)
  , (Identifier "k",4:12,1)
  , (Symbol ")",4:13,1)
  , (Symbol "->",4:15,2)
  , (Identifier "k",4:18,1)
  , (Symbol "(",4:20,1)
  , (Symbol ")",4:21,1)
  , (Symbol "|",5:2,1)
  , (Identifier "Input",5:4,5)
  , (Symbol "(",5:9,1)
  , (Identifier "x",5:10,1)
  , (Symbol ",",5:11,1)
  , (Identifier "k",5:12,1)
  , (Symbol ")",5:13,1)
  , (Symbol "->",5:15,2)
  , (Symbol "let",5:18,3)
  , (Identifier "plus1",5:22,5)
  , (Symbol "=",5:28,1)
  , (Symbol "fun",5:30,3)
  , (Identifier "x",5:34,1)
  , (Symbol "->",5:36,2)
  , (Identifier "x",5:39,1)
  , (Symbol "+",5:41,1)
  , (Number 1,5:43,1)
  , (Symbol "in",5:45,2)
  , (Identifier "k",5:48,1)
  , (Symbol "(",5:50,1)
  , (Identifier "plus1",5:51,5)
  , (Symbol "(",5:56,1)
  , (Identifier "plus1",5:57,5)
  , (Symbol "(",5:62,1)
  , (Number 5,5:63,1)
  , (Symbol ")",5:64,1)
  , (Symbol ")",5:65,1)
  , (Symbol ")",5:66,1)
  , (Symbol "in",6:1,2)
  , (Symbol "let",7:1,3)
  , (Symbol "rec",7:5,3)
  , (Identifier "loop",7:9,4)
  , (Symbol "=",7:14,1)
  , (Symbol "fun",7:16,3)
  , (Identifier "n",7:20,1)
  , (Symbol "->",7:22,2)
  , (Symbol "if",7:25,2)
  , (Identifier "n",7:28,1)
  , (Symbol ">",7:30,1)
  , (Number 0,7:32,1)
  , (Symbol "then",7:34,4)
  , (Symbol "(",7:39,1)
  , (Identifier "Print",7:40,5)
  , (Identifier "n",7:46,1)
  , (Symbol ";",7:47,1)
  , (Identifier "loop",7:49,4)
  , (Symbol "(",7:54,1)
  , (Identifier "n",7:55,1)
  , (Symbol "-",7:56,1)
  , (Number 1,7:57,1)
  , (Symbol ")",7:58,1)
  , (Symbol ")",7:59,1)
  , (Symbol "else",7:61,4)
  , (Symbol "(",7:66,1)
  , (Symbol ")",7:67,1)
  , (Symbol "in",7:69,2)
  , (Identifier "consoleHandler",8:1,14)
  , (Symbol "(",8:16,1)
  , (Identifier "loop",8:17,4)
  , (Number 5,8:22,1)
  , (Symbol ")",8:23,1)
  , (Eof,0:0,0)
  ]
  =========== Lambda ================
  Fix [ consoleHandler ]effektos: src/SyntaxToLambda.hs:(26,7)-(56,47): Non-exhaustive patterns in case
  
  [1]
